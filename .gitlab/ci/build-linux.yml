.build-demo-linux:
  tags:
    - cet_build
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}/bin
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Build application.
    - cmake .. --preset ${Preset}
    - make

.build-demo-linux-arm-clang:
  extends: .build-demo-linux
  stage: build-clang
  image: ${DOCKER_IMAGE_ARM_LINUX_CLANG}

.build-demo-linux-arm-gcc:
  extends: .build-demo-linux
  stage: build-gcc
  image: ${DOCKER_IMAGE_ARM_LINUX_GCC}

.build-demo-linux-clang:
  extends: .build-demo-linux
  stage: build-clang
  image: ${DOCKER_IMAGE_CLANG}

.build-demo-linux-gcc:
  extends: .build-demo-linux
  stage: build-gcc
  image: ${DOCKER_IMAGE_GCC}

linux-arm-clang-debug-build:
  extends: .build-demo-linux-arm-clang
  variables:
    Preset: "linux-arm-clang-debug"

linux-arm-clang-release-build:
  extends: .build-demo-linux-arm-clang
  only:
    - master
  variables:
    Preset: "linux-arm-clang-release"

linux-arm-gcc-debug-build:
  extends: .build-demo-linux-arm-gcc
  variables:
    Preset: "linux-arm-gcc-debug"

linux-arm-gcc-release-build:
  extends: .build-demo-linux-arm-gcc
  only:
    - master
  variables:
    Preset: "linux-arm-gcc-release"

linux-clang-debug-build:
  extends: .build-demo-linux-clang
  variables:
    Preset: "linux-clang-debug"

linux-clang-release-build:
  extends: .build-demo-linux-clang
  only:
    - master
  variables:
    Preset: "linux-clang-release"

linux-gcc-debug-build:
  extends: .build-demo-linux-gcc
  variables:
    Preset: "linux-gcc-debug"

linux-gcc-release-build:
  extends: .build-demo-linux-gcc
  only:
    - master
  variables:
    Preset: "linux-gcc-release"
