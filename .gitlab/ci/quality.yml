clang-format:
  stage: "Quality"
  image: ${DOCKER_IMAGE_CLANG}
  tags:
    - cet_build
  needs: []
  script:
    - tools/check-clang-format.sh app demo
    - git diff --color > clang-format.patch
    - |
      if [[ `wc -l < clang-format.patch` != "0" ]]; then
        cat clang-format.patch
        git checkout -- .
        exit 1
      fi

.clang-tidy:
  stage: "Quality"
  tags:
    - cet_build
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    when: always
    paths:
      - ${CI_JOB_NAME}/errors.yml
      - ${CI_JOB_NAME}/compile_commands.json
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Check build.
    - cmake .. --preset ${Preset}
    - ../tools/check-clang-tidy.sh

clang-tidy-linux:
  extends: .clang-tidy
  image: ${DOCKER_IMAGE_CLANG}
  variables:
    Preset: "linux-clang-debug"

clang-tidy-linux-arm:
  extends: .clang-tidy
  image: ${DOCKER_IMAGE_ARM_LINUX_CLANG}
  variables:
    Preset: "linux-arm-clang-debug"
