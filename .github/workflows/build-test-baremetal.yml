name: Build and test for baremetal

on:
  push:
  schedule:
    - cron: "0 12 * * SAT"
  workflow_dispatch:

jobs:
  build-stm32f4:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, X64, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: baremetal-arm-debug
            DOCKER_IMAGE: kubasejdak/arm-none-eabi-gcc:13-24.04
          - PRESET: baremetal-arm-release
            DOCKER_IMAGE: kubasejdak/arm-none-eabi-gcc:13-24.04
          - PRESET: freertos-arm-debug
            DOCKER_IMAGE: kubasejdak/arm-none-eabi-gcc:13-24.04
          - PRESET: freertos-arm-release
            DOCKER_IMAGE: kubasejdak/arm-none-eabi-gcc:13-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: kubasejdak-org/cmake-build-preset-action@main
        with:
          preset: ${{ matrix.PRESET }}


  test-stm32f4:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, ARM64, stm32f4]
    needs: build-stm32f4
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: baremetal-arm-debug
    steps:
      - run: rm -rf ${{ github.workspace }}
        name: clean workspace
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ env.PRESET }}
      - run: |
          tools/ci/program-openocd.py stm32f4discovery ${{ matrix.APP }}
          tools/ci/logs-reader.py /dev/ttyUSB0

  check-all:
    runs-on: [self-hosted, build]
    needs:
      - build-stm32f4
      - test-stm32f4
    steps:
      - run: echo "Success"
