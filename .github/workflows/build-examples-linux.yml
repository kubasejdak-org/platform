name: Build and run examples for Linux

on:
  push:
  schedule:
    - cron: "0 12 * * SAT"
  workflow_dispatch:

jobs:
  build-x64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, X64, build, docker]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-native-gcc-debug
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-gcc-release
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-clang-debug
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
          - PRESET: linux-native-clang-release
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: kubasejdak-org/cmake-build-preset-action@main
        with:
          preset: ${{ matrix.PRESET }}
 
  build-arm64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, X64, build, docker]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-arm64-gcc-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-gcc-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-clang-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
          - PRESET: linux-arm64-clang-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: kubasejdak-org/cmake-build-preset-action@main
        with:
          preset: ${{ matrix.PRESET }}

  examples-x64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, X64, docker]
    needs: build-x64
    container:
      image: kubasejdak/gcc:13-24.04
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-native-gcc-debug
    steps:
      - uses: kubasejdak-org/binary-run-action@main
        with:
          binary: ${{ matrix.APP }}
          artifact: ${{ env.PRESET }}
 
  examples-arm64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, ARM64, docker]
    needs: build-arm64
    container:
      image: kubasejdak/tests-sbc:13-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-arm64-gcc-debug
    steps:
      - uses: kubasejdak-org/binary-run-action@main
        with:
          binary: ${{ matrix.APP }}
          artifact: ${{ env.PRESET }}

  valgrind-x64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, X64, docker]
    needs: build-x64
    container:
      image: kubasejdak/valgrind:24.04
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-native-gcc-debug
    steps:
      - uses: kubasejdak-org/valgrind-run-action@main
        with:
          binary: ${{ matrix.APP }}
          artifact: ${{ env.PRESET }}

  check-all:
    runs-on: [self-hosted, build]
    needs:
      - build-x64
      - build-arm64
      - examples-x64
      - examples-arm64
      - valgrind-x64
    steps:
      - run: echo "Success"
