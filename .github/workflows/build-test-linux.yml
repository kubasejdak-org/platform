name: Build and test for Linux

on:
  push:
  schedule:
    - cron: "0 12 * * SAT"
  workflow_dispatch:

jobs:
  build-x64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, X64, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-native-gcc-debug
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-gcc-release
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-clang-debug
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
          - PRESET: linux-native-clang-release
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/templates/build-cmake-preset-action
        with:
          preset: ${{ matrix.PRESET }}
      # - name: build preset
      #   run: |
      #     mkdir build
      #     cd build
      #     cmake .. --preset ${{ matrix.PRESET }}
      #     make -j$(nproc)
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: build-${{ matrix.PRESET }}
      #     path: build/bin
 
  build-arm64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, X64, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-arm64-gcc-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-gcc-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-clang-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
          - PRESET: linux-arm64-clang-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - name: build preset
        run: |
          mkdir build
          cd build
          cmake .. --preset ${{ matrix.PRESET }}
          make -j$(nproc)
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.PRESET }}
          path: build/bin

  test-x64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, X64]
    needs: build-x64
    container:
      image: kubasejdak/gcc:13-24.04
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-native-gcc-debug
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ env.PRESET }}
      - name: run tests
        run: |
          chmod +x ${{ matrix.APP }}
          ./${{ matrix.APP }}
 
  test-arm64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, ARM64]
    needs: build-arm64
    container:
      image: kubasejdak/tests-sbc:13-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-arm64-gcc-debug
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ env.PRESET }}
      - name: run tests
        run: |
          chmod +x ${{ matrix.APP }}
          ./${{ matrix.APP }}

  valgrind-x64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, X64]
    needs: build-x64
    container:
      image: kubasejdak/valgrind:24.04
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - APP: platform-git-version
          - APP: platform-hello-world
    env:
      PRESET: linux-native-gcc-debug
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ env.PRESET }}
      - name: run valgrind
        run: |
          chmod +x ${{ matrix.APP }}
          valgrind --leak-check=full \
                   --show-leak-kinds=definite,indirect,possible \
                   --fair-sched=yes \
                   --track-origins=yes \
                   --trace-children=yes \
                   --error-markers=errstart,errend \
                   ./${{ matrix.app }}
          valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes ./${{ matrix.APP }}

  check-all:
    runs-on: [self-hosted, build]
    needs:
      - build-x64
      - build-arm64
      - test-x64
      - test-arm64
      - valgrind-x64
    steps:
      - run: echo "Success"
