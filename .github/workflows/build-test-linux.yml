name: Build and test for Linux

on:
  push:
  schedule:
    - cron: "0 12 * * SAT"
  workflow_dispatch:

env:
  DOCKER_IMAGE_LINUX_X64_GCC: kubasejdak/gcc:13-24.04
  DOCKER_IMAGE_LINUX_X64_CLANG: kubasejdak/clang:18-24.04
  DOCKER_IMAGE_LINUX_ARM64_GCC: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
  DOCKER_IMAGE_LINUX_ARM64_CLANG: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04

jobs:
  build-x64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-native-gcc-debug
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-gcc-release
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-clang-debug
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
          - PRESET: linux-native-clang-release
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - name: build preset
        run: |
          mkdir build
          cd build
          cmake .. --preset ${{ matrix.PRESET }}
          make -j$(nproc)

  build-arm64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-arm64-gcc-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-gcc-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-clang-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
          - PRESET: linux-arm64-clang-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - name: build preset
        run: |
          mkdir build
          cd build
          cmake .. --preset ${{ matrix.PRESET }}
          make -j$(nproc)

