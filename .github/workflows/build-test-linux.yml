name: Build and test for Linux

on:
  push:
  schedule:
    - cron: "0 12 * * SAT"
  workflow_dispatch:

jobs:
  build-x64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-native-gcc-debug
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-gcc-release
            DOCKER_IMAGE: kubasejdak/gcc:13-24.04
          - PRESET: linux-native-clang-debug
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
          - PRESET: linux-native-clang-release
            DOCKER_IMAGE: kubasejdak/clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - name: build preset
        run: |
          mkdir build
          cd build
          cmake .. --preset ${{ matrix.PRESET }}
          make -j$(nproc)
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.PRESET }}
          path: build/bin
 
  build-arm64:
    name: ${{ matrix.PRESET }}
    runs-on: [self-hosted, build]
    needs: []
    container:
      image: ${{ matrix.DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        include:
          - PRESET: linux-arm64-gcc-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-gcc-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-gcc:13-24.04
          - PRESET: linux-arm64-clang-debug
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
          - PRESET: linux-arm64-clang-release
            DOCKER_IMAGE: kubasejdak/aarch64-none-linux-gnu-clang:18-24.04
    steps:
      - uses: actions/checkout@v4
      - name: build preset
        run: |
          mkdir build
          cd build
          cmake .. --preset ${{ matrix.PRESET }}
          make -j$(nproc)
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.PRESET }}
          path: build/bin

  test-x64:
    name: ${{ matrix.APP }}
    runs-on: [self-hosted, build]
    needs: build-x64
    env:
      PRESET: linux-native-gcc-debug
    container:
      image: ${{ matrix. DOCKER_IMAGE }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        APP: [ platform-git-version, platform-hello-world]
        DOCKER_IMAGE: [ kubasejdak/gcc:13-24.04 ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-$PRESET
      - name: build preset
        run: |
          cd build-$PRESET
          .$APP

  check-all:
    runs-on: [self-hosted, build]
    needs:
      - build-x64
      - build-arm64
      - test-x64
    steps:
      - run: echo "Success"
